# MKS Nano V3 By：zzcat
#make menuconfig--STM32F407--48KiB bootloader--8MHZ--USB(PA11/PA12)
# The "make flash" command does not work on the MKS Robin. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "Robin_nano_v3.bin" on an SD card and then restart the
# MKS Robin with that SD card.

[stepper_a]
step_pin: PE3
dir_pin: PE2  #加"!"控制电机正反转
enable_pin: !PE4
microsteps: 16
rotation_distance: 40   ##rotation_distance = ((360°/1.8°) * microsteps) / 80 # # 旋转距离 = （圆周360°/步距角）*细分/每MM脉冲值
endstop_pin: PA15 #X-Min, PE4:X-Max
#position_endstop: 336
homing_speed: 40
#arm_length = 315

[stepper_b]
step_pin: PE0
dir_pin: PB9   #加"!"控制电机正反转
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: PD2  #Y-Min, PJ0:Y-Max
#position_endstop: 336
#arm_length = 315

[stepper_c]
step_pin: PB5
dir_pin: PB4   #加"!"控制电机正反转
enable_pin: !PB8
microsteps: 16
rotation_distance: 40
endstop_pin: PC4  #Z-Min, PD2:Z-Max
#position_endstop: 336
#arm_length = 315

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 4.535 # SR default 7.805
nozzle_diameter: 0.4
filament_diameter: 1.750
heater_pin: PE5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: -5
max_temp: 275
pressure_advance: 0.04
control = pid
pid_kp = 18.240
pid_ki = 0.558
pid_kd = 149.109
max_extrude_cross_section: 110 
max_extrude_only_distance: 1100

#[extruder1]
#step_pin: PC1
#dir_pin: !PC3
#enable_pin: !PC7
#heater_pin: PH4
#sensor_pin: PK7
#...

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
min_temp: 0
max_temp: 115
control = pid
pid_kp = 71.041
pid_ki = 1.422
pid_kd = 887.123



[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 31.4
shaper_type_y = mzv
shaper_freq_y = 32

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_4D0040000B50304B58373720-if00 # Run ls /dev/serial/by-id/* on your Raspberry Pi to get YOUR serial or it wont connect

[mcu rpi]  #https://www.klipper3d.org/Measuring_Resonances.html GO HERE TO INSTALL ACCELEROMETERS DO NOT TRUST THE PICTURE FOR WIRING THE GPIO LABEL ISN'T IN THE RIGHT SPOT.
serial: /tmp/klipper_host_mcu  

#[temperature_sensor raspberry_pi] #pi的温度
#sensor_type: temperature_host
#min_temp: 10
#max_temp: 100

#[temperature_sensor mcu_temp] #主板的温度
#sensor_type: temperature_mcu
#min_temp: 0
#max_temp: 100

[printer]
kinematics: delta
max_velocity: 300 #最大打印速度
max_accel: 4000 #最大加速度
#max_accel_to_decel: 2000  #最大加速度到减速度
square_corner_velocity: 5 #直角速度
max_z_velocity: 300 #最大Z速度
#delta_radius: 151.7
print_radius: 132
minimum_z_position=-5 #最小Z高度

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[delta_calibrate]
radius: 120
horizontal_move_z: 25
Speed: 10

[fan]
pin: PC14
max_power: 0.8
kick_start_time: 0.0


[heater_fan heat_sink_fan]
pin: PB1 #PB0 - RIP board
max_power: 1.0
heater: extruder
heater_temp: 50.0
fan_speed: 1.0
max_power: 1.0
cycle_time: 0.02817 #35.5hrz 
kick_start_time: 0.0

[probe]  #相当于G33
pin: !PC8
x_offset: 0  #调平开关的偏移量
y_offset: 0
speed: 10  #速度
samples: 9 #点几下
samples_result: average  #平均
sample_retract_dist: 3 #探点上下的距离
samples_tolerance: 0.02 #精度，容忍度 要到0.02才可以
samples_tolerance_retries: 5 #重复的次数

[bed_mesh]  #相当于G29
speed: 50 #速度
horizontal_move_z: 25 #抬升高度？
mesh_radius: 120  #调平半径
mesh_origin: 0,0  #原点
round_probe_count: 7 #点数7*7的网格
algorithm: bicubic

[filament_switch_sensor filament_sensor]  #断料检测
pause_on_runout: True
runout_gcode: PAUSE #没耗材执行动作
switch_pin: PA4

[pause_resume]

[gcode_macro PAUSE] #暂停
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(-120) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]  #继续打印
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% if printer["filament_switch_sensor filament_sensor"].filament_detected == True %} #判断耗材传感器是否有耗材，true代表有耗材
      {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
      {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
      {% endif %}
    ##### end of definitions #####
      G91
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}   
      RESUME_BASE {get_params}
    {% endif %} 

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G28


[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode:
   SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[gcode_macro UNLOAD_FILAMENT] #unload filament
gcode:
    G91
    G1 E20 F800
    G1 E-1000 F800
    G90

[gcode_macro LOAD_FILAMENT] #load filament
gcode:
    G91
    G1 E950 F800
    G1 E50 F300
    G90

[save_variables]
filename: ~/savedVariables1.cfg

[gcode_macro SET_GCODE_OFFSET]
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}

    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:  
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}

        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}

        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}
    BED_MESH_PROFILE load=Finito
    G28
    
[gcode_arcs]



[gcode_macro bed_level_1]
gcode:
  SET_GCODE_OFFSET Z=0
  G28
  delta_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  save_config

[gcode_macro bed_level_2]
gcode:
  G28
  G1 X0 Y0 Z50 F4200
  bed_mesh_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  save_config

[gcode_macro M205]
description: Alternative to "jerk speed"
gcode:
    {% if 'X' in params %}
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X|int}
    {% elif 'Y' in params %}
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y|int}
    {% endif %}

[gcode_macro m201]
description: Sets maximum accelleration.
  Usage: M201 [X<accel>] [Y<accel>]
variable_max_accel: 1.7976931348623157e+308
gcode:
  {% set km = printer["gcode_macro _km_globals"] %}
  {% if 'X' in params or 'Y' in params %}
    {% set accel = (params.X|default(params.Y)|float,
                    params.Y|default(params.X)|float)|min %}
    SET_GCODE_VARIABLE MACRO=m201 VARIABLE=max_accel VALUE="{accel}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro m203]
description: Sets maximum velocity.
  Usage: M203 [X<velocity>] [Y<velocity>]
gcode:
  {% if 'X' in params or 'Y' in params %}
    {% set velocity = (params.X|default(params.Y)|float,
                       params.Y|default(params.X)|float)|min %}
    SET_VELOCITY_LIMIT VELOCITY="{velocity}"
  {% else %}
    SET_VELOCITY_LIMIT
  {% endif %}

[gcode_macro PURGE_LINE]
gcode:
  M117 Printing prime line
  G1 F3000 Z1           ; Raise Z to 1mm  
  G1 X-127 Y0 Z0.4      ; Move to starting position  
  G92 E0                ; Reset extrusion distance  

  G3 X0 Y-127 I127 E40 F3000  ; Arc move with extrusion  
  
  G92 E0.0                    ; Reset extrusion distance  
  G1 E-3 F2400                ; Retract filament by 3mm  
  G4 P200                     ; Short pause (200ms) to prevent oozing  
  G1 X0 Y0 F3000              ; Move back to center  

[gcode_shell_command backup_cfg]
command: /usr/bin/bash /home/pi/printer_data/config/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
description: Backs up config directory GitHub
gcode:
     RUN_SHELL_COMMAND CMD=backup_cfg

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 300
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

########################################
# TMC UART configuration
########################################

[tmc2209 stepper_a]
uart_pin: PD5
run_current: 1.138
hold_current: 0.5
stealthchop_threshold: 999999

#sense_resistor: 0.110
#interpolate: True
#diag_pin: ^PE5      # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 60   # 255 is most sensitive value, 0 is least sensitiv      # Set to MCU pin connected to TMC DIAG pin


[tmc2209 stepper_b]
uart_pin: PD7
run_current: 1.138
hold_current: 0.5
stealthchop_threshold: 999999

#sense_resistor: 0.110
#interpolate: True
#diag_pin: ^PJ1      # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 60  # 255 is most sensitive value, 0 is least sensitiv

[tmc2209 stepper_c]
uart_pin: PD4
#interpolate: True
run_current: 1.138
hold_current: 0.5
#sense_resistor: 0.110
stealthchop_threshold: 999999
#diag_pin: ^PD2     # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 255  # 255 is most sensitive value, 0 is least sensitiv

[tmc2209 extruder]
uart_pin: PD9
interpolate: True
run_current: 0.85 #1.1
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999


#[tmc2209 stepper_e1]
#uart_pin: PB6
##interpolate: True
#run_current: 0.8
#hold_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0




########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC0, EXP1_3=PH0, EXP1_5=PA1, EXP1_7=PA5, EXP1_9=<GND>,
    EXP1_2=PC2, EXP1_4=PH1, EXP1_6=PA3, EXP1_8=PA7, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB3, EXP2_3=PC6, EXP2_5=PC4, EXP2_7=PL0,  EXP2_9=<GND>,
    EXP2_2=PB1, EXP2_4=PB0, EXP2_6=PB2, EXP2_8=PG0, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp1"
# See the MKS Lcd Config path file for definitions of common LCD displays.
#[include mks_lcd_12864.cfg]




[display_status]

#[bltouch]
#sensor_pin: ^PD2
#control_pin:PB5
#x_offset: -44
#y_offset: -14
#z_offset: 3.099
#speed: 10.0
#samples: 2
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.1
#samples_tolerance_retries: 1

#[safe_z_home]
#home_xy_position: 100,100 # Change coordinates to the center of your print bed
#speed: 50
#z_hop: 10                 # Move up 10mm
#z_hop_speed: 5


[gcode_macro G29]
description: Bed mesh clear and recalibrate
gcode:
    BED_MESH_CLEAR
    G28
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=name
    SAVE_CONFIG
    BED_MESH_PROFILE LOAD=name

[resonance_tester] # ENABLE  THIS  IF YOU HAVE ADXL ACCELEROMETER . USE MANUAL METHOD IF YOU DONT INSTEAD. https://www.klipper3d.org/Resonance_Compensation.html
#GND = AZUL
#VCC = VERDE
#CS = AMARILLO
#SDO = NARANJA
#SDA = ROJO
#SCL = CAFÉ
accel_chip: adxl345
max_smoothing: 0.20  # an example
min_freq: 5
max_freq: 120
accel_per_hz: 25
probe_points: 
     0,0,5

[adxl345]
cs_pin: rpi:None

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [printer]
#*# delta_radius = 151.680326
#*#
#*# [stepper_a]
#*# angle = 210.048417
#*# arm_length = 315.000000
#*# position_endstop = 333.696
#*#
#*# [stepper_b]
#*# angle = 330.710394
#*# arm_length = 315.000000
#*# position_endstop = 332.292
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 315.000000
#*# position_endstop = 333.176
#*#
#*# [bed_mesh name]
#*# version = 1
#*# points =
#*# 	0.073624, 0.073624, 0.073624, 0.073624, 0.073624, 0.073624, 0.073624
#*# 	-0.017477, -0.017477, -0.001068, 0.015193, -0.068414, -0.007395, -0.007395
#*# 	-0.073115, -0.073115, -0.038154, 0.024720, -0.041175, -0.008488, -0.008488
#*# 	-0.046918, -0.041522, -0.002840, 0.013911, 0.020237, 0.401151, 0.379050
#*# 	0.021693, 0.021693, -0.002924, 0.000313, -0.040653, 0.063687, 0.063687
#*# 	0.031659, 0.031659, 0.015697, 0.000269, -0.052940, -0.069107, -0.069107
#*# 	0.015673, 0.015673, 0.015673, 0.015673, 0.015673, 0.015673, 0.015673
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -120.0
#*# max_x = 120.0
#*# min_y = -120.0
#*# max_y = 120.0
#*#
#*# [bed_mesh Test]
#*# version = 1
#*# points =
#*# 	-0.651376, -0.651376, -0.651376, -0.651376, -0.651376, -0.651376, -0.651376
#*# 	-0.771643, -0.771643, -0.780235, -0.751474, -0.785081, -0.761561, -0.761561
#*# 	-0.810225, -0.810225, -0.804820, -0.762780, -0.803675, -0.820988, -0.820988
#*# 	-0.788585, -0.779022, -0.773674, -0.798589, -0.829763, -0.890516, -0.941783
#*# 	-0.749140, -0.749140, -0.748757, -0.762187, -0.811486, -0.869647, -0.869647
#*# 	-0.705841, -0.705841, -0.730137, -0.762231, -0.815440, -0.848274, -0.848274
#*# 	-0.763494, -0.763494, -0.763494, -0.763494, -0.763494, -0.763494, -0.763494
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -120.0
#*# max_x = 120.0
#*# min_y = -120.0
#*# max_y = 120.0
#*#
#*# [bed_mesh Test2]
#*# version = 1
#*# points =
#*# 	0.098624, 0.098624, 0.098624, 0.098624, 0.098624, 0.098624, 0.098624
#*# 	-0.046643, -0.046643, -0.038568, 0.002693, -0.043414, -0.036561, -0.036561
#*# 	-0.060225, -0.060225, -0.025654, -0.012780, -0.041175, -0.087654, -0.087654
#*# 	-0.042752, -0.020689, 0.001326, 0.018078, -0.058930, -0.119683, -0.204283
#*# 	0.096693, 0.096693, 0.230410, 0.025313, -0.028153, -0.132147, -0.132147
#*# 	0.469159, 0.469159, 0.549030, 0.025269, -0.048773, -0.081607, -0.081607
#*# 	0.032339, 0.032339, 0.032339, 0.032339, 0.032339, 0.032339, 0.032339
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -120.0
#*# max_x = 120.0
#*# min_y = -120.0
#*# max_y = 120.0
#*#
#*# [bed_mesh Test3]
#*# version = 1
#*# points =
#*# 	0.115291, 0.115291, 0.115291, 0.115291, 0.115291, 0.115291, 0.115291
#*# 	-0.009143, -0.009143, -0.001068, 0.011026, -0.035081, 0.363439, 0.363439
#*# 	-0.043559, -0.043559, -0.021487, 0.012220, -0.028675, -0.012654, -0.012654
#*# 	-0.026085, -0.012356, 0.005493, -0.011089, -0.050596, -0.128016, -0.112617
#*# 	0.030026, 0.030026, 0.013743, 0.004479, -0.036486, -0.090480, -0.090480
#*# 	0.039992, 0.039992, 0.044863, 0.012769, -0.040440, -0.069107, -0.069107
#*# 	0.011506, 0.011506, 0.011506, 0.011506, 0.011506, 0.011506, 0.011506
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -120.0
#*# max_x = 120.0
#*# min_y = -120.0
#*# max_y = 120.0
#*#
#*# [bed_mesh FinalTest]
#*# version = 1
#*# points =
#*# 	-0.605542, -0.605542, -0.605542, -0.605542, -0.605542, -0.605542, -0.605542
#*# 	-0.713310, -0.713310, -0.713568, -0.668141, -0.718414, -0.711561, -0.711561
#*# 	-0.735225, -0.735225, -0.713154, -0.675280, -0.707842, -0.741821, -0.741821
#*# 	-0.713585, -0.691522, -0.669507, -0.681922, -0.729763, -0.807183, -0.858450
#*# 	-0.644974, -0.644974, -0.636257, -0.653854, -0.694820, -0.757147, -0.757147
#*# 	-0.630490, -0.630490, -0.621803, -0.649731, -0.702940, -0.773274, -0.773274
#*# 	-0.663494, -0.663494, -0.663494, -0.663494, -0.663494, -0.663494, -0.663494
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -120.0
#*# max_x = 120.0
#*# min_y = -120.0
#*# max_y = 120.0
#*#
#*# [probe]
#*# z_offset = 18.650
#*#
#*# [bed_mesh Finito]
#*# version = 1
#*# points =
#*# 	-1.529376, -1.529376, -1.529376, -1.529376, -1.529376, -1.529376, -1.529376
#*# 	-1.682977, -1.682977, -1.654068, -1.572468, -1.625539, -1.603450, -1.603450
#*# 	-1.650985, -1.650985, -1.591154, -1.515780, -1.571953, -1.657321, -1.657321
#*# 	-1.610012, -1.594522, -1.524353, -1.490478, -1.496652, -1.381016, -1.595535
#*# 	-1.501904, -1.501904, -1.493567, -1.524909, -1.472748, -1.287690, -1.287690
#*# 	-1.509996, -1.509996, -1.484538, -1.488842, -1.586495, -1.558219, -1.558219
#*# 	-1.540105, -1.540105, -1.540105, -1.540105, -1.540105, -1.540105, -1.540105
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -120.0
#*# max_x = 120.0
#*# min_y = -120.0
#*# max_y = 120.0
#*#
#*# [delta_calibrate]
#*# height0 = 18.503
#*# height0_pos = 25312.222,25201.222,25278.222
#*# height1 = 18.503
#*# height1_pos = 30266.000,30110.111,22340.111
#*# height2 = 18.503
#*# height2_pos = 24636.667,33043.667,24602.667
#*# height3 = 18.503
#*# height3_pos = 22518.000,29395.000,29434.000
#*# height4 = 18.503
#*# height4_pos = 24505.111,24418.111,30662.000
#*# height5 = 18.503
#*# height5_pos = 28744.000,22577.000,28709.000
#*# height6 = 18.503
#*# height6_pos = 31833.000,24397.000,24502.000
